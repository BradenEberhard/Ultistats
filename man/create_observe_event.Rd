% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fcts_admin_data.R
\name{create_observe_event}
\alias{create_observe_event}
\title{Generalized observeEvent Handler for Admin Panel}
\usage{
create_observe_event(
  input,
  input_id,
  update_function,
  timestamps,
  progress_message = NULL,
  conn_params = list()
)
}
\arguments{
\item{input}{A list of input elements, typically from a Shiny UI, to listen for events.}

\item{input_id}{The ID of the input element to observe.}

\item{update_function}{The function to call when the input event is triggered. This function should take the database connection and base URL as parameters.}

\item{timestamps}{A function to reset timestamps or update progress. It is called after the update function is executed.}

\item{progress_message}{An optional message to display during progress. If provided, a progress bar is shown during execution.}

\item{conn_params}{A list of parameters for database connection, including `db_path` and `base_url`.}
}
\value{
NULL This function does not return any value. It only triggers an update action when the event occurs.
}
\description{
This function creates an observeEvent handler that listens for an event triggered by a UI input element. When the event is triggered, the function opens a database connection, calls the provided `update_function` to update data, and optionally shows a progress message.
}
\examples{
# Example usage in a Shiny app:
create_observe_event(input, "updateButton", update_games, function(x) {}, progress_message = "Updating games...")
}
